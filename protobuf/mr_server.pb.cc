// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mr_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mr_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mr {

namespace {

const ::google::protobuf::Descriptor* JobDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* JobDef_TasksEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ClusterDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerDef_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mr_5fserver_2eproto() {
  protobuf_AddDesc_mr_5fserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mr_server.proto");
  GOOGLE_CHECK(file != NULL);
  JobDef_descriptor_ = file->message_type(0);
  static const int JobDef_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobDef, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobDef, tasks_),
  };
  JobDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JobDef_descriptor_,
      JobDef::default_instance_,
      JobDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(JobDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobDef, _is_default_instance_));
  JobDef_TasksEntry_descriptor_ = JobDef_descriptor_->nested_type(0);
  ClusterDef_descriptor_ = file->message_type(1);
  static const int ClusterDef_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterDef, job_),
  };
  ClusterDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClusterDef_descriptor_,
      ClusterDef::default_instance_,
      ClusterDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClusterDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterDef, _is_default_instance_));
  ServerDef_descriptor_ = file->message_type(2);
  static const int ServerDef_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, cluster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, job_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, task_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, default_session_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, protocol_),
  };
  ServerDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerDef_descriptor_,
      ServerDef::default_instance_,
      ServerDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDef, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mr_5fserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JobDef_descriptor_, &JobDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        JobDef_TasksEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                JobDef_TasksEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClusterDef_descriptor_, &ClusterDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerDef_descriptor_, &ServerDef::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mr_5fserver_2eproto() {
  delete JobDef::default_instance_;
  delete JobDef_reflection_;
  delete ClusterDef::default_instance_;
  delete ClusterDef_reflection_;
  delete ServerDef::default_instance_;
  delete ServerDef_reflection_;
}

void protobuf_AddDesc_mr_5fserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017mr_server.proto\022\002mr\"j\n\006JobDef\022\014\n\004name\030"
    "\001 \001(\t\022$\n\005tasks\030\002 \003(\0132\025.mr.JobDef.TasksEn"
    "try\032,\n\nTasksEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030"
    "\002 \001(\t:\0028\001\"%\n\nClusterDef\022\027\n\003job\030\001 \003(\0132\n.m"
    "r.JobDef\"\204\001\n\tServerDef\022\037\n\007cluster\030\001 \001(\0132"
    "\016.mr.ClusterDef\022\020\n\010job_name\030\002 \001(\t\022\022\n\ntas"
    "k_index\030\003 \001(\005\022\036\n\026default_session_config\030"
    "\004 \001(\t\022\020\n\010protocol\030\005 \001(\tb\006proto3", 311);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mr_server.proto", &protobuf_RegisterTypes);
  JobDef::default_instance_ = new JobDef();
  ClusterDef::default_instance_ = new ClusterDef();
  ServerDef::default_instance_ = new ServerDef();
  JobDef::default_instance_->InitAsDefaultInstance();
  ClusterDef::default_instance_->InitAsDefaultInstance();
  ServerDef::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mr_5fserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mr_5fserver_2eproto {
  StaticDescriptorInitializer_mr_5fserver_2eproto() {
    protobuf_AddDesc_mr_5fserver_2eproto();
  }
} static_descriptor_initializer_mr_5fserver_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobDef::kNameFieldNumber;
const int JobDef::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobDef::JobDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mr.JobDef)
}

void JobDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

JobDef::JobDef(const JobDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mr.JobDef)
}

void JobDef::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasks_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  tasks_.SetEntryDescriptor(
      &::mr::JobDef_TasksEntry_descriptor_);
}

JobDef::~JobDef() {
  // @@protoc_insertion_point(destructor:mr.JobDef)
  SharedDtor();
}

void JobDef::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JobDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobDef_descriptor_;
}

const JobDef& JobDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mr_5fserver_2eproto();
  return *default_instance_;
}

JobDef* JobDef::default_instance_ = NULL;

JobDef* JobDef::New(::google::protobuf::Arena* arena) const {
  JobDef* n = new JobDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobDef::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasks_.Clear();
}

bool JobDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mr.JobDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mr.JobDef.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tasks;
        break;
      }

      // map<int32, string> tasks = 2;
      case 2: {
        if (tag == 18) {
         parse_tasks:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tasks:
          ::google::protobuf::scoped_ptr<JobDef_TasksEntry> entry(tasks_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_tasks())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->mutable_value()->data(),
            entry->mutable_value()->length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mr.JobDef.TasksEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_tasks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mr.JobDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mr.JobDef)
  return false;
#undef DO_
}

void JobDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mr.JobDef)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.JobDef.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<int32, string> tasks = 2;
  {
    ::google::protobuf::scoped_ptr<JobDef_TasksEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->tasks().begin();
        it != this->tasks().end(); ++it) {
      entry.reset(tasks_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          2, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "mr.JobDef.TasksEntry.value");
    }
  }

  // @@protoc_insertion_point(serialize_end:mr.JobDef)
}

::google::protobuf::uint8* JobDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mr.JobDef)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.JobDef.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<int32, string> tasks = 2;
  {
    ::google::protobuf::scoped_ptr<JobDef_TasksEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->tasks().begin();
        it != this->tasks().end(); ++it) {
      entry.reset(tasks_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              2, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "mr.JobDef.TasksEntry.value");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:mr.JobDef)
  return target;
}

int JobDef::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // map<int32, string> tasks = 2;
  total_size += 1 * this->tasks_size();
  {
    ::google::protobuf::scoped_ptr<JobDef_TasksEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->tasks().begin();
        it != this->tasks().end(); ++it) {
      entry.reset(tasks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JobDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JobDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobDef::MergeFrom(const JobDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tasks_.MergeFrom(from.tasks_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void JobDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDef::CopyFrom(const JobDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDef::IsInitialized() const {

  return true;
}

void JobDef::Swap(JobDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobDef::InternalSwap(JobDef* other) {
  name_.Swap(&other->name_);
  tasks_.Swap(&other->tasks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobDef_descriptor_;
  metadata.reflection = JobDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JobDef

// optional string name = 1;
void JobDef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& JobDef::name() const {
  // @@protoc_insertion_point(field_get:mr.JobDef.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JobDef::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mr.JobDef.name)
}
 void JobDef::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mr.JobDef.name)
}
 void JobDef::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mr.JobDef.name)
}
 ::std::string* JobDef::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mr.JobDef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JobDef::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JobDef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mr.JobDef.name)
}

// map<int32, string> tasks = 2;
int JobDef::tasks_size() const {
  return tasks_.size();
}
void JobDef::clear_tasks() {
  tasks_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
JobDef::tasks() const {
  // @@protoc_insertion_point(field_map:mr.JobDef.tasks)
  return tasks_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
JobDef::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_map:mr.JobDef.tasks)
  return tasks_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterDef::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterDef::ClusterDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mr.ClusterDef)
}

void ClusterDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ClusterDef::ClusterDef(const ClusterDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mr.ClusterDef)
}

void ClusterDef::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ClusterDef::~ClusterDef() {
  // @@protoc_insertion_point(destructor:mr.ClusterDef)
  SharedDtor();
}

void ClusterDef::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClusterDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterDef_descriptor_;
}

const ClusterDef& ClusterDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mr_5fserver_2eproto();
  return *default_instance_;
}

ClusterDef* ClusterDef::default_instance_ = NULL;

ClusterDef* ClusterDef::New(::google::protobuf::Arena* arena) const {
  ClusterDef* n = new ClusterDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterDef::Clear() {
  job_.Clear();
}

bool ClusterDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mr.ClusterDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mr.JobDef job = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_job;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mr.ClusterDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mr.ClusterDef)
  return false;
#undef DO_
}

void ClusterDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mr.ClusterDef)
  // repeated .mr.JobDef job = 1;
  for (unsigned int i = 0, n = this->job_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->job(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mr.ClusterDef)
}

::google::protobuf::uint8* ClusterDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mr.ClusterDef)
  // repeated .mr.JobDef job = 1;
  for (unsigned int i = 0, n = this->job_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->job(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mr.ClusterDef)
  return target;
}

int ClusterDef::ByteSize() const {
  int total_size = 0;

  // repeated .mr.JobDef job = 1;
  total_size += 1 * this->job_size();
  for (int i = 0; i < this->job_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->job(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClusterDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClusterDef::MergeFrom(const ClusterDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  job_.MergeFrom(from.job_);
}

void ClusterDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterDef::CopyFrom(const ClusterDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterDef::IsInitialized() const {

  return true;
}

void ClusterDef::Swap(ClusterDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterDef::InternalSwap(ClusterDef* other) {
  job_.UnsafeArenaSwap(&other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterDef_descriptor_;
  metadata.reflection = ClusterDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterDef

// repeated .mr.JobDef job = 1;
int ClusterDef::job_size() const {
  return job_.size();
}
void ClusterDef::clear_job() {
  job_.Clear();
}
const ::mr::JobDef& ClusterDef::job(int index) const {
  // @@protoc_insertion_point(field_get:mr.ClusterDef.job)
  return job_.Get(index);
}
::mr::JobDef* ClusterDef::mutable_job(int index) {
  // @@protoc_insertion_point(field_mutable:mr.ClusterDef.job)
  return job_.Mutable(index);
}
::mr::JobDef* ClusterDef::add_job() {
  // @@protoc_insertion_point(field_add:mr.ClusterDef.job)
  return job_.Add();
}
::google::protobuf::RepeatedPtrField< ::mr::JobDef >*
ClusterDef::mutable_job() {
  // @@protoc_insertion_point(field_mutable_list:mr.ClusterDef.job)
  return &job_;
}
const ::google::protobuf::RepeatedPtrField< ::mr::JobDef >&
ClusterDef::job() const {
  // @@protoc_insertion_point(field_list:mr.ClusterDef.job)
  return job_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDef::kClusterFieldNumber;
const int ServerDef::kJobNameFieldNumber;
const int ServerDef::kTaskIndexFieldNumber;
const int ServerDef::kDefaultSessionConfigFieldNumber;
const int ServerDef::kProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDef::ServerDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mr.ServerDef)
}

void ServerDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  cluster_ = const_cast< ::mr::ClusterDef*>(&::mr::ClusterDef::default_instance());
}

ServerDef::ServerDef(const ServerDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mr.ServerDef)
}

void ServerDef::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cluster_ = NULL;
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_index_ = 0;
  default_session_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerDef::~ServerDef() {
  // @@protoc_insertion_point(destructor:mr.ServerDef)
  SharedDtor();
}

void ServerDef::SharedDtor() {
  job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_session_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete cluster_;
  }
}

void ServerDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerDef_descriptor_;
}

const ServerDef& ServerDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mr_5fserver_2eproto();
  return *default_instance_;
}

ServerDef* ServerDef::default_instance_ = NULL;

ServerDef* ServerDef::New(::google::protobuf::Arena* arena) const {
  ServerDef* n = new ServerDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDef::Clear() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) delete cluster_;
  cluster_ = NULL;
  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_index_ = 0;
  default_session_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ServerDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mr.ServerDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mr.ClusterDef cluster = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_job_name;
        break;
      }

      // optional string job_name = 2;
      case 2: {
        if (tag == 18) {
         parse_job_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_name().data(), this->job_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mr.ServerDef.job_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_task_index;
        break;
      }

      // optional int32 task_index = 3;
      case 3: {
        if (tag == 24) {
         parse_task_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_default_session_config;
        break;
      }

      // optional string default_session_config = 4;
      case 4: {
        if (tag == 34) {
         parse_default_session_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_session_config()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_session_config().data(), this->default_session_config().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mr.ServerDef.default_session_config"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_protocol;
        break;
      }

      // optional string protocol = 5;
      case 5: {
        if (tag == 42) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol().data(), this->protocol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mr.ServerDef.protocol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mr.ServerDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mr.ServerDef)
  return false;
#undef DO_
}

void ServerDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mr.ServerDef)
  // optional .mr.ClusterDef cluster = 1;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cluster_, output);
  }

  // optional string job_name = 2;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_name(), output);
  }

  // optional int32 task_index = 3;
  if (this->task_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->task_index(), output);
  }

  // optional string default_session_config = 4;
  if (this->default_session_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_session_config().data(), this->default_session_config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.default_session_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->default_session_config(), output);
  }

  // optional string protocol = 5;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.protocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->protocol(), output);
  }

  // @@protoc_insertion_point(serialize_end:mr.ServerDef)
}

::google::protobuf::uint8* ServerDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mr.ServerDef)
  // optional .mr.ClusterDef cluster = 1;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->cluster_, target);
  }

  // optional string job_name = 2;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_name(), target);
  }

  // optional int32 task_index = 3;
  if (this->task_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->task_index(), target);
  }

  // optional string default_session_config = 4;
  if (this->default_session_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_session_config().data(), this->default_session_config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.default_session_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->default_session_config(), target);
  }

  // optional string protocol = 5;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mr.ServerDef.protocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->protocol(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mr.ServerDef)
  return target;
}

int ServerDef::ByteSize() const {
  int total_size = 0;

  // optional .mr.ClusterDef cluster = 1;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }

  // optional string job_name = 2;
  if (this->job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_name());
  }

  // optional int32 task_index = 3;
  if (this->task_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_index());
  }

  // optional string default_session_config = 4;
  if (this->default_session_config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_session_config());
  }

  // optional string protocol = 5;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerDef::MergeFrom(const ServerDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_cluster()) {
    mutable_cluster()->::mr::ClusterDef::MergeFrom(from.cluster());
  }
  if (from.job_name().size() > 0) {

    job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_name_);
  }
  if (from.task_index() != 0) {
    set_task_index(from.task_index());
  }
  if (from.default_session_config().size() > 0) {

    default_session_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_session_config_);
  }
  if (from.protocol().size() > 0) {

    protocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_);
  }
}

void ServerDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDef::CopyFrom(const ServerDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDef::IsInitialized() const {

  return true;
}

void ServerDef::Swap(ServerDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDef::InternalSwap(ServerDef* other) {
  std::swap(cluster_, other->cluster_);
  job_name_.Swap(&other->job_name_);
  std::swap(task_index_, other->task_index_);
  default_session_config_.Swap(&other->default_session_config_);
  protocol_.Swap(&other->protocol_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerDef_descriptor_;
  metadata.reflection = ServerDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDef

// optional .mr.ClusterDef cluster = 1;
bool ServerDef::has_cluster() const {
  return !_is_default_instance_ && cluster_ != NULL;
}
void ServerDef::clear_cluster() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) delete cluster_;
  cluster_ = NULL;
}
const ::mr::ClusterDef& ServerDef::cluster() const {
  // @@protoc_insertion_point(field_get:mr.ServerDef.cluster)
  return cluster_ != NULL ? *cluster_ : *default_instance_->cluster_;
}
::mr::ClusterDef* ServerDef::mutable_cluster() {
  
  if (cluster_ == NULL) {
    cluster_ = new ::mr::ClusterDef;
  }
  // @@protoc_insertion_point(field_mutable:mr.ServerDef.cluster)
  return cluster_;
}
::mr::ClusterDef* ServerDef::release_cluster() {
  
  ::mr::ClusterDef* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void ServerDef::set_allocated_cluster(::mr::ClusterDef* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mr.ServerDef.cluster)
}

// optional string job_name = 2;
void ServerDef::clear_job_name() {
  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerDef::job_name() const {
  // @@protoc_insertion_point(field_get:mr.ServerDef.job_name)
  return job_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_job_name(const ::std::string& value) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mr.ServerDef.job_name)
}
 void ServerDef::set_job_name(const char* value) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mr.ServerDef.job_name)
}
 void ServerDef::set_job_name(const char* value, size_t size) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mr.ServerDef.job_name)
}
 ::std::string* ServerDef::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:mr.ServerDef.job_name)
  return job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerDef::release_job_name() {
  
  return job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name);
  // @@protoc_insertion_point(field_set_allocated:mr.ServerDef.job_name)
}

// optional int32 task_index = 3;
void ServerDef::clear_task_index() {
  task_index_ = 0;
}
 ::google::protobuf::int32 ServerDef::task_index() const {
  // @@protoc_insertion_point(field_get:mr.ServerDef.task_index)
  return task_index_;
}
 void ServerDef::set_task_index(::google::protobuf::int32 value) {
  
  task_index_ = value;
  // @@protoc_insertion_point(field_set:mr.ServerDef.task_index)
}

// optional string default_session_config = 4;
void ServerDef::clear_default_session_config() {
  default_session_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerDef::default_session_config() const {
  // @@protoc_insertion_point(field_get:mr.ServerDef.default_session_config)
  return default_session_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_default_session_config(const ::std::string& value) {
  
  default_session_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mr.ServerDef.default_session_config)
}
 void ServerDef::set_default_session_config(const char* value) {
  
  default_session_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mr.ServerDef.default_session_config)
}
 void ServerDef::set_default_session_config(const char* value, size_t size) {
  
  default_session_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mr.ServerDef.default_session_config)
}
 ::std::string* ServerDef::mutable_default_session_config() {
  
  // @@protoc_insertion_point(field_mutable:mr.ServerDef.default_session_config)
  return default_session_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerDef::release_default_session_config() {
  
  return default_session_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_allocated_default_session_config(::std::string* default_session_config) {
  if (default_session_config != NULL) {
    
  } else {
    
  }
  default_session_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_session_config);
  // @@protoc_insertion_point(field_set_allocated:mr.ServerDef.default_session_config)
}

// optional string protocol = 5;
void ServerDef::clear_protocol() {
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerDef::protocol() const {
  // @@protoc_insertion_point(field_get:mr.ServerDef.protocol)
  return protocol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_protocol(const ::std::string& value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mr.ServerDef.protocol)
}
 void ServerDef::set_protocol(const char* value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mr.ServerDef.protocol)
}
 void ServerDef::set_protocol(const char* value, size_t size) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mr.ServerDef.protocol)
}
 ::std::string* ServerDef::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:mr.ServerDef.protocol)
  return protocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerDef::release_protocol() {
  
  return protocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerDef::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol);
  // @@protoc_insertion_point(field_set_allocated:mr.ServerDef.protocol)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mr

// @@protoc_insertion_point(global_scope)
